<?php

// Includes functions to create Islandora Solr blocks.
require_once dirname(__FILE__) . '/includes/blocks.inc';
require_once dirname(__FILE__) . '/includes/utilities.inc';
require_once dirname(__FILE__) . '/includes/doi_importer.inc';
require_once dirname(__FILE__) . '/includes/wos.inc';
require_once dirname(__FILE__) . '/includes/kuali.inc';
require_once dirname(__FILE__) . '/includes/citeproc_converter.inc';
require_once dirname(__FILE__) . '/includes/breadcrumbs.inc';

module_load_include('inc', 'openskydora', 'theme/theme');

/**
 * Implements hook_menu().
 */
function openskydora_menu () {
    $items = array();
    $items['openskydora/scratch'] = array(
        'title' => 'OpenSky Scratch',
        'page callback' => 'openskydora_scratch',
        'access callback' => TRUE,
        'expanded' => TRUE,
    );
    
    $items['openskydora/embargo'] = array(
        'title' => '', # Embargo Messenger',
        'page callback' => 'openskydora_embargo_messenger',
          'page arguments' => array(
              2,
          ),
        'access callback' => TRUE,
        'expanded' => TRUE,
    );

    $items['admin/config/system/openskydora'] = array(
        'title' => 'OpenSky',
        'page callback' => 'drupal_get_form',
        'page arguments' => array ('openskydora_config_form'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );
    
    return $items;
}

// Implement hook_theme_registry_alter
function openskydora_theme_registry_alter(&$theme_registry) {

    // islandora_solr_metadata
    if (!empty($theme_registry['islandora_solr_metadata_display'])) {
        $theme_registry['islandora_solr_metadata_display']['template'] = drupal_get_path('module', 'openskydora') . '/theme/openskydora-solr-metadata-display';
        $theme_registry['islandora_solr_metadata_display']['theme path'] = drupal_get_path('module', 'openskydora');
        array_splice ($theme_registry['islandora_solr_metadata_display']['process functions'], 2, 0, 'template_process_openskydora_metadata_display');
        
    }
    // islandora_basic_collection
    if (!empty($theme_registry['islandora_basic_collection_wrapper'])) {
        $theme_registry['islandora_basic_collection_wrapper']['template'] = drupal_get_path('module', 'openskydora') . '/theme/openskydora-basic-collection-wrapper';
        if ($theme_registry['islandora_basic_collection_wrapper']['preprocess functions'][1] != 'template_preprocess_openskydora_basic_collection_wrapper') {
            array_splice ($theme_registry['islandora_basic_collection_wrapper']['preprocess functions'], 1, 0, 'template_preprocess_openskydora_basic_collection_wrapper');
        }        
    }

    // islandora_openseadragon
    if (isset($theme_registry['islandora_openseadragon_clipper']) && !empty($theme_registry['islandora_openseadragon_clipper'])) {
        unset ($theme_registry['islandora_openseadragon_clipper']);
    } 

    if (isset($theme_registry['islandora_openseadragon_viewer']) && !empty($theme_registry['islandora_openseadragon_viewer'])) {

        // Replace "template_process_islandora_openseadragon_viewer" with
        // 'openskydora_template_process_islandora_openseadragon_viewer' so we can
        // change the javascript for jstilesource.js
        foreach ($theme_registry['islandora_openseadragon_viewer']['process functions'] as $key=>$function_name) {
            if ($function_name === 'template_process_islandora_openseadragon_viewer') {
                $theme_registry['islandora_openseadragon_viewer']['process functions'][$key] = 'openskydora_template_process_islandora_openseadragon_viewer';
            }
        }
        // stick openskydora function on end of process functions array
        //         $theme_registry['islandora_openseadragon_viewer']['process functions'][] = 'openskydora_template_process_islandora_openseadragon_viewer';
    }
}

/**
   Implements hook_module_implements_alter
   - ensures that the openskydora version of the
   islandora_object_access hook is called.

   - disable
     islandora_scholar_ir_citationCModel_islandora_view_object, which
     used the "renderable array" technique, instead of the template
     approach used by other content models.

*/ 
function openskydora_module_implements_alter(&$implementations, $hook) {

    // drupal_set_message ("openskydora_module_implements_alter: hook: $hook");

  if ($hook == 'islandora_object_access') {

      $module = 'openskydora';
      $group = array($module => $implementations[$module]);
      unset($implementations[$module]);
      $implementations = $group + $implementations;
  }

  // disable islandora_scholar_ir_citationCModel_islandora_view_object
  if ($hook == 'ir_citationCModel_islandora_view_object') {
      if (isset ($implementations['islandora_scholar'])) {
          unset ($implementations['islandora_scholar']);
      }
  }
}


/**
 * Implements hook_theme().
 */
function openskydora_theme() {
    $path = drupal_get_path('module', 'openskydora');
    $file = 'theme.inc';
    return array (
        'openskydora_scratch' => array (
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-scratch',
            'variables' => array ('pid' => null),
        ),
        'openskydora_embargo_messenger' => array (
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-embargo-messenger',
            'variables' => array (
            ),
        ),
        'openskydora_search_collection_info' => array (
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-search-collection-info',
            'variables' => array (
                'collection_pid' => NULL,
                'collection_title' => NULL,
                'collection_description' => NULL
            ),
        ),
        'openskydora_in_collections' => array(
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-in-collections',
            'variables' => array (
                'parent_collections' => NULL,
            ),
        ),
        'openskydora_advanced_search' => array(
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-advanced-search',
            'variables' => array (
                'collection_pid' => NULL,
            ),
        ),
        'openskydora_collection_picker_data' => array (
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-collection-picker-data',
            'variables' => array (
                'option_data' => NULL,
            ),
        ),
        'openskydora_solr_metadata_display' => array (
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-solr-metadata-display',
            'variables' => array (
                'option_data' => NULL,
            ),
        ),
        'openskydora_basic_collection_wrapper' => array (
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'openskydora-basic-collection-wrapper',
            'variables' => array (
                'option_data' => NULL,
            ),
        ),
                
        'openskydora_citation' => array(
            'path' => $path . '/theme',
            'file' => $file,
            'template' => 'islandora-citation',
            'variables' => array('islandora_object' => NULL),
        ),
        
    );
}

/**
 * Implements hook_help().
 */
function openskydora_help($path, $arg) {

    if ($path == 'admin/help#openskydora') {
        $output = '<h3>' . t('About') . '</h3>';
        $output .= '<p>' . t('The openskydora module provides extensions and customization to Islandora core modules.') . '</p>';
        return $output;
    }
}

/**
 * Provide content for the openskydora/scratch page (via openskydora_scratch theme)
 */
function openskydora_scratch() {

    $defaultpid = variable_get('islandora_repository_pid');
    if (isset($_GET['pid']) && $_GET['pid'] != NULL) {
        $pid = $_GET['pid'];
    } else {
        $pid = $defaultpid;
    }

    return theme('openskydora_scratch', array('pid' => $pid));
}

/**
 * Provide content for the openskydora/scratch page (via openskydora_scratch theme)
 */
function openskydora_embargo_messenger ($pid) {
    return theme('openskydora_embargo_messenger', array('pid' => $pid));
}

function openskydora_config_form ($form, &$form_state) {
    $form['openskydora_ga_id'] = array (
        '#type' => 'textfield',
        '#title' => t('Google Analytics ID'),
	'#default_value' => variable_get('openskydora_ga_id', ''),
        '#size' => 14,
        '#maxlength' => 20,
        '#description' => t('The Google Analytics ID.'),
        '#required' => TRUE,
    );

    return system_settings_form($form);
}

